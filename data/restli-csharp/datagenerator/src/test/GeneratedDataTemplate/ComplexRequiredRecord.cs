using System.Collections.Generic;
using System;


// DO NOT EDIT - THIS FILE IS GENERATED BY restli-csharp

namespace ComplexRequiredRecord
{

    ///<summary>
///Contains fields of all supported complex schema types
///Every field is required
///</summary>
  public class ComplexRequiredRecord
  {
    
    public ??? EnumField { get; }
    public bool HasEnumField { get; }
    
    public ??? PrimitiveUnion { get; }

    
    public ??? ComplexUnion { get; }


    public ComplexRequiredRecord(Dictionary<string, object> data)
    {
      object value;
      bool status;
      // Retrieve data for enumField
      status = data.TryGetValue("enumField", out value);
      if (status)
      {
        HasEnumField = true;
        EnumField = (???)value;
      }
      else
      {
        EnumField = (???)SYMBOL_2;
        HasEnumField = false;
      }
      // Retrieve data for primitiveUnion
      status = data.TryGetValue("primitiveUnion", out value);
      if (status)
      {

        PrimitiveUnion = (???)value;
      }

      // Retrieve data for complexUnion
      status = data.TryGetValue("complexUnion", out value);
      if (status)
      {

        ComplexUnion = (???)value;
      }

    }

    public ComplexRequiredRecord(Builder builder)
    {
      // Retrieve data for enumField
      if (builder.EnumField != null)
      {
        HasEnumField = true;
        EnumField = (???)builder.EnumField;
      }
      else
      {
        EnumField = (???)SYMBOL_2;
        HasEnumField = false;
      }
      // Retrieve data for primitiveUnion
      if (builder.PrimitiveUnion != null)
      {

        PrimitiveUnion = (???)builder.PrimitiveUnion;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: primitiveUnion");
      }
      // Retrieve data for complexUnion
      if (builder.ComplexUnion != null)
      {

        ComplexUnion = (???)builder.ComplexUnion;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: complexUnion");
      }
    }
  }

  public class Builder
  {
    public null? EnumField { get; set; }
    public null? PrimitiveUnion { get; set; }
    public null? ComplexUnion { get; set; }

    public ComplexRequiredRecord build()
    {
      return new ComplexRequiredRecord(this);
    }
  }
}