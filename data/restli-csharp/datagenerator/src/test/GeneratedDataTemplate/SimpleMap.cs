using System.Collections.Generic;
using System;


// DO NOT EDIT - THIS FILE IS GENERATED BY restli-csharp

namespace com.linkedin.restli.datagenerator.integration
{

    ///<summary>Simple map to test out the C# Rest.li map type</summary>
  public class SimpleMap
  {

    // required
    public IReadOnlyDictionary<string, int> IntMap { get; }


    // required
    public IReadOnlyDictionary<string, long> LongMap { get; }


    // required
    public IReadOnlyDictionary<string, string> StringMap { get; }


    // required
    public IReadOnlyDictionary<string, EnumInMapRecord> EnumMap { get; }


    public SimpleMap(Dictionary<string, object> data)
    {
      object value;
      bool status;
      // Retrieve data for IntMap
      status = data.TryGetValue("IntMap", out value);
      if (status)
      {

        IntMap = (IReadOnlyDictionary<string, int>)value;
      }

      // Retrieve data for LongMap
      status = data.TryGetValue("LongMap", out value);
      if (status)
      {

        LongMap = (IReadOnlyDictionary<string, long>)value;
      }

      // Retrieve data for StringMap
      status = data.TryGetValue("StringMap", out value);
      if (status)
      {

        StringMap = (IReadOnlyDictionary<string, string>)value;
      }

      // Retrieve data for EnumMap
      status = data.TryGetValue("EnumMap", out value);
      if (status)
      {

        EnumMap = (IReadOnlyDictionary<string, EnumInMapRecord>)value;
      }

    }

    public SimpleMap(Builder builder)
    {
      // Retrieve data for IntMap
      if (builder.IntMap != null)
      {

        IntMap = (IReadOnlyDictionary<string, int>)builder.IntMap;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: IntMap");
      }
      // Retrieve data for LongMap
      if (builder.LongMap != null)
      {

        LongMap = (IReadOnlyDictionary<string, long>)builder.LongMap;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: LongMap");
      }
      // Retrieve data for StringMap
      if (builder.StringMap != null)
      {

        StringMap = (IReadOnlyDictionary<string, string>)builder.StringMap;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: StringMap");
      }
      // Retrieve data for EnumMap
      if (builder.EnumMap != null)
      {

        EnumMap = (IReadOnlyDictionary<string, EnumInMapRecord>)builder.EnumMap;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: EnumMap");
      }
    }
  }

  public class Builder
  {
    public IReadOnlyDictionary<string, int> IntMap { get; set; }
    public IReadOnlyDictionary<string, long> LongMap { get; set; }
    public IReadOnlyDictionary<string, string> StringMap { get; set; }
    public IReadOnlyDictionary<string, EnumInMapRecord> EnumMap { get; set; }

    public SimpleMap Build()
    {
      return new SimpleMap(this);
    }
  }
}