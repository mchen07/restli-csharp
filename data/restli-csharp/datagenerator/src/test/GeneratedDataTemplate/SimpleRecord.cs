using System.Collections.Generic;
using System;


// DO NOT EDIT - THIS FILE IS GENERATED BY restli-csharp

namespace SimpleRecord
{

    
  public class SimpleRecord
  {
    
    public string StringField { get; }

    
    public int IntValue { get; }
    public bool HasIntValue { get; }
    
    public int AnotherIntValue { get; }
    public bool HasAnotherIntValue { get; }

    public SimpleRecord(Dictionary<string, object> data)
    {
      object value;
      bool status;
      // Retrieve data for stringField
      status = data.TryGetValue("stringField", out value);
      if (status)
      {

        StringField = (string)value;
      }

      // Retrieve data for intValue
      status = data.TryGetValue("intValue", out value);
      if (status)
      {
        HasIntValue = true;
        IntValue = (int)value;
      }
      else
      {
        IntValue = (int)1;
        HasIntValue = false;
      }
      // Retrieve data for anotherIntValue
      status = data.TryGetValue("anotherIntValue", out value);
      if (status)
      {
        HasAnotherIntValue = true;
        AnotherIntValue = (int)value;
      }
      else
      {
        AnotherIntValue = (int)2;
        HasAnotherIntValue = false;
      }
    }

    public SimpleRecord(Builder builder)
    {
      // Retrieve data for stringField
      if (builder.StringField != null)
      {

        StringField = (string)builder.StringField;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: stringField");
      }
      // Retrieve data for intValue
      if (builder.IntValue != null)
      {
        HasIntValue = true;
        IntValue = (int)builder.IntValue;
      }
      else
      {
        IntValue = (int)1;
        HasIntValue = false;
      }
      // Retrieve data for anotherIntValue
      if (builder.AnotherIntValue != null)
      {
        HasAnotherIntValue = true;
        AnotherIntValue = (int)builder.AnotherIntValue;
      }
      else
      {
        AnotherIntValue = (int)2;
        HasAnotherIntValue = false;
      }
    }
  }

  public class Builder
  {
    public string StringField { get; set; }
    public int? IntValue { get; set; }
    public int? AnotherIntValue { get; set; }

    public SimpleRecord build()
    {
      return new SimpleRecord(this);
    }
  }
}