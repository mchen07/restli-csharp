using System.Collections.Generic;
using System;


// DO NOT EDIT - THIS FILE IS GENERATED BY restli-csharp

namespace com.linkedin.restli.datagenerator.integration
{

    ///<summary>A record which contains an object of its own type, to allow recursive tests on updates</summary>
  public class NestedRecord
  {

    // required, has default value
    public int IntField { get; }
    public bool HasIntField { get; }

    // required, has default value
    public string StringField { get; }
    public bool HasStringField { get; }

    // optional
    public NestedRecord NestedRecord { get; }


    public NestedRecord(Dictionary<string, object> data)
    {
      object value;
      bool status;
      // Retrieve data for IntField
      status = data.TryGetValue("IntField", out value);
      if (status)
      {
        IntField = (int)value;
        HasIntField = true;
      }
      else
      {
        IntField = 123;
        HasIntField = false;
      }
      // Retrieve data for StringField
      status = data.TryGetValue("StringField", out value);
      if (status)
      {
        StringField = (string)value;
        HasStringField = true;
      }
      else
      {
        StringField = "hi";
        HasStringField = false;
      }
      // Retrieve data for NestedRecord
      status = data.TryGetValue("NestedRecord", out value);
      if (status)
      {
        NestedRecord = (NestedRecord)value;

      }

    }

    public NestedRecord(Builder builder)
    {
      // Retrieve data for IntField
      if (builder.IntField != null)
      {
        IntField = (int)builder.IntField;
        HasIntField = true;
      }
      else
      {
        IntField = 123;
        HasIntField = false;
      }
      // Retrieve data for StringField
      if (builder.StringField != null)
      {
        StringField = (string)builder.StringField;
        HasStringField = true;
      }
      else
      {
        StringField = "hi";
        HasStringField = false;
      }
      // Retrieve data for NestedRecord
      if (builder.NestedRecord != null)
      {
        NestedRecord = (NestedRecord)builder.NestedRecord;

      }

    }
  }

  public class Builder
  {
    public int? IntField { get; set; }
    public string StringField { get; set; }
    public NestedRecord NestedRecord { get; set; }

    public NestedRecord Build()
    {
      return new NestedRecord(this);
    }
  }
}