using System.Collections.Generic;
using System;


// DO NOT EDIT - THIS FILE IS GENERATED BY restli-csharp

namespace com.linkedin.restli.datagenerator.integration
{

    ///<summary>Test simple arrays</summary>
  public class SimpleArray
  {

    // required
    public IReadOnlyList<int> IntArray { get; }


    // required
    public IReadOnlyList<string> StringArray { get; }


    // required
    public IReadOnlyList<bool> BooleanArray { get; }


    // required
    public IReadOnlyList<EnumInRecord> EnumArray { get; }


    public SimpleArray(Dictionary<string, object> data)
    {
      object value;
      bool status;
      // Retrieve data for IntArray
      status = data.TryGetValue("IntArray", out value);
      if (status)
      {

        IntArray = (IReadOnlyList<int>)value;
      }

      // Retrieve data for StringArray
      status = data.TryGetValue("StringArray", out value);
      if (status)
      {

        StringArray = (IReadOnlyList<string>)value;
      }

      // Retrieve data for BooleanArray
      status = data.TryGetValue("BooleanArray", out value);
      if (status)
      {

        BooleanArray = (IReadOnlyList<bool>)value;
      }

      // Retrieve data for EnumArray
      status = data.TryGetValue("EnumArray", out value);
      if (status)
      {

        EnumArray = (IReadOnlyList<EnumInRecord>)value;
      }

    }

    public SimpleArray(Builder builder)
    {
      // Retrieve data for IntArray
      if (builder.IntArray != null)
      {

        IntArray = (IReadOnlyList<int>)builder.IntArray;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: IntArray");
      }
      // Retrieve data for StringArray
      if (builder.StringArray != null)
      {

        StringArray = (IReadOnlyList<string>)builder.StringArray;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: StringArray");
      }
      // Retrieve data for BooleanArray
      if (builder.BooleanArray != null)
      {

        BooleanArray = (IReadOnlyList<bool>)builder.BooleanArray;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: BooleanArray");
      }
      // Retrieve data for EnumArray
      if (builder.EnumArray != null)
      {

        EnumArray = (IReadOnlyList<EnumInRecord>)builder.EnumArray;
      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: EnumArray");
      }
    }
  }

  public class Builder
  {
    public IReadOnlyList<int> IntArray { get; set; }
    public IReadOnlyList<string> StringArray { get; set; }
    public IReadOnlyList<bool> BooleanArray { get; set; }
    public IReadOnlyList<EnumInRecord> EnumArray { get; set; }

    public SimpleArray Build()
    {
      return new SimpleArray(this);
    }
  }
}