using System.Collections.Generic;
using System;


// DO NOT EDIT - THIS FILE IS GENERATED BY restli-csharp

namespace com.linkedin.restli.datagenerator.integration
{
  /// <summary>Test simple arrays</summary>
  public class SimpleArray
  {

    // required
    public IReadOnlyList<int> intArray { get; }


    // required
    public IReadOnlyList<string> stringArray { get; }


    // required
    public IReadOnlyList<bool> booleanArray { get; }


    // required
    public IReadOnlyList<EnumInRecord> enumArray { get; }


    public SimpleArray(Dictionary<string, object> data)
    {
      object value;
      bool status;
      // Retrieve data for intArray
      status = data.TryGetValue("intArray", out value);
      if (status)
      {
        intArray = (IReadOnlyList<int>)value;

      }

      // Retrieve data for stringArray
      status = data.TryGetValue("stringArray", out value);
      if (status)
      {
        stringArray = (IReadOnlyList<string>)value;

      }

      // Retrieve data for booleanArray
      status = data.TryGetValue("booleanArray", out value);
      if (status)
      {
        booleanArray = (IReadOnlyList<bool>)value;

      }

      // Retrieve data for enumArray
      status = data.TryGetValue("enumArray", out value);
      if (status)
      {
        enumArray = (IReadOnlyList<EnumInRecord>)value;

      }

    }

    public SimpleArray(SimpleArrayBuilder builder)
    {
      // Retrieve data for intArray
      if (builder.intArray != null)
      {
        intArray = (IReadOnlyList<int>)builder.intArray;

      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: intArray");
      }
      // Retrieve data for stringArray
      if (builder.stringArray != null)
      {
        stringArray = (IReadOnlyList<string>)builder.stringArray;

      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: stringArray");
      }
      // Retrieve data for booleanArray
      if (builder.booleanArray != null)
      {
        booleanArray = (IReadOnlyList<bool>)builder.booleanArray;

      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: booleanArray");
      }
      // Retrieve data for enumArray
      if (builder.enumArray != null)
      {
        enumArray = (IReadOnlyList<EnumInRecord>)builder.enumArray;

      }
      else
      {
        throw new System.ArgumentNullException("Required field with no default must be included in builder: enumArray");
      }
    }

  }

  public class SimpleArrayBuilder
  {
    public IReadOnlyList<int> intArray { get; set; }
    public IReadOnlyList<string> stringArray { get; set; }
    public IReadOnlyList<bool> booleanArray { get; set; }
    public IReadOnlyList<EnumInRecord> enumArray { get; set; }

    public SimpleArray Build()
    {
      return new SimpleArray(this);
    }
  }
}