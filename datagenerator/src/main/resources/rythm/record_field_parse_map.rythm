@import com.linkedin.restli.datagenerator.csharp.CSharpRecord;
@import com.linkedin.restli.datagenerator.csharp.CSharpUnion;
@import com.linkedin.restli.datagenerator.csharp.CSharpMap;
@import com.linkedin.restli.datagenerator.csharp.CSharpCollectionType;
@import com.linkedin.restli.datagenerator.csharp.CSharpRecord.Field;
@import com.linkedin.restli.datagenerator.csharp.CSharpRythmGenerator;
@import com.linkedin.restli.datagenerator.csharp.CSharpUtil;
@import org.rythmengine.RythmEngine;
@args CSharpMap cSharpMap, String sourceName, String targetName, int level, RythmEngine engine
foreach (KeyValuePair<string, @cSharpMap.getElementType().getDataMapParseName()> @(sourceName + level)pair in @(sourceName + (level-1)))
{
  @cSharpMap.getElementType().getDataMapParseName() @(sourceName + level) = @(sourceName + level)pair.Value;
  @cSharpMap.getElementType().getNameMutable() result@(level)@if (cSharpMap.getElementType() instanceof CSharpCollectionType){ = new @(cSharpMap.getElementType().getNameMutable())()};
  @CSharpUtil.invokeRythmTemplate("record_field_parse", engine, cSharpMap.getElementType(), sourceName, targetName, level+1).restli_addIndent(2)
  result@(level - 1).Add(@(sourceName + level)pair.Key, result@(level));
}