@import com.linkedin.restli.datagenerator.csharp.CSharpEnum;
@import com.linkedin.restli.datagenerator.csharp.CSharpRythmGenerator;
@import org.rythmengine.RythmEngine
@args CSharpEnum cSharpEnum, CSharpRythmGenerator generator, RythmEngine engine

// DO NOT EDIT - THIS FILE IS GENERATED BY restli-csharp@cSharpEnum.restli_generatedFrom()

namespace @cSharpEnum.getNamespace()
{
  @cSharpEnum.getDoc().restli_comment()
  public class @cSharpEnum.getName() {
    public enum Value
    {
@for (String symbol : cSharpEnum.getSymbols()) {
@if (cSharpEnum.getSymbolDoc(symbol)) {

      @cSharpEnum.getSymbolDoc(symbol).restli_comment()
}
      @symbol,
}

      @@UNKNOWN
    }

    public Value? value { get; }

    public @(cSharpEnum.getName())(string data)
    {
@for (String symbol : cSharpEnum.getSymbols()) {
@if (symbol_isFirst) {
      if (data.Equals("@symbol"))
} else {
      else if (data.Equals("@symbol"))
}
      {
        value = Value.@symbol;
      }
}@// This Rythm comment prevents the 'else' in line below from being interpreted
      else
      {
        throw new System.ArgumentNullException("Argument in enum constructor invalid for enum: @cSharpEnum.getName()");
      }
    }
  }
}